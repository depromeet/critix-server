plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.diffplug.spotless' version '6.20.0'
}

group = 'depromeet'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'
	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
spotless {
	java {
		// Import 순서
		importOrder("java", "javax", "jakarta", "org", "com")
		// 사용하지 않는 import 자동 제거
		removeUnusedImports()
		//구글 자바 포맷 적용
		googleJavaFormat()
		// 파일 끝에 개행 추가
		endWithNewline()
		// 각 라인 끝에 공백 제거
		trimTrailingWhitespace()
		// 애노테이션 포맷팅 정리 (한 줄에 한 개씩 배치)
		formatAnnotations()
	}
}

tasks.register("updateGitHooks", Copy) {
	from(file("${rootProject.rootDir}/scripts/pre-commit"))
	into(file("${rootProject.rootDir}/.git/hooks"))
}

tasks.register('makeGitHooksExecutable', Exec) {
	if (System.getProperty("os.name").contains("Windows")) {
		commandLine("attrib", "+x", "${rootProject.rootDir}/.git/hooks/pre-commit")
	} else {
		commandLine("chmod", "+x", "${rootProject.rootDir}/.git/hooks/pre-commit")
	}
	dependsOn("updateGitHooks")
}

tasks.withType(JavaCompile) {
	dependsOn("makeGitHooksExecutable")
}

